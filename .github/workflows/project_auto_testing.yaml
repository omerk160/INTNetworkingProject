name: Project auto-testing
on:
  push:
    branches:
      - main

permissions: {}

jobs:
  NetworkingProjectTestBastionAndRotation:
    runs-on: ubuntu-latest
    env:
      PUBLIC_INSTANCE_SSH_KEY: ${{ secrets.PUBLIC_INSTANCE_SSH_KEY }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: exit-zero-academy/NetworkingProject
          path: NetworkingProjectOriginal
      - name: Copy test files
        run: mv -f NetworkingProjectOriginal/test/* test/
      - name: Set up SSH
        run: |
         mkdir -p ~/.ssh
         echo "${{ secrets.PUBLIC_INSTANCE_SSH_KEY }}" > ~/.ssh/id_rsa
         chmod 600 ~/.ssh/id_rsa
         echo -e "Host bastion\n\tUser ubuntu\n\tIdentityFile ~/.ssh/id_rsa\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

      - name: Parse instances IP address
        id: parse_ip
        run: |
          mkdir -p ~/.ssh
          cp test/ssh_config ~/.ssh/config
                  
          PUBLIC_IP=$(jq -r '.public_instance_ip' ec2_instances.json)
          echo "Public IP value: $PUBLIC_IP"
          if ! [[ "$PUBLIC_IP" =~ [0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3} ]]; then
            echo "The value provided for public_instance_ip in ec2_instances.json is not a valid IPv4 address"
            exit 1
          fi
          
          PRIVATE_IP=$(jq -r '.private_instance_ip' ec2_instances.json)
          echo "Private IP value: $PRIVATE_IP"
          if ! [[ $PRIVATE_IP =~ 10\.0\.1\.[0-9]{1,3} ]]; then
            echo "The value provided for private_instance_ip in ec2_instances.json is not a valid IPv4 address or does not belong to 10.0.1.0/24 which is the private subnet CIDR"
            exit 1
          fi
          
          if [[ -n "$PUBLIC_INSTANCE_SSH_KEY" ]]; then
              echo "$PUBLIC_INSTANCE_SSH_KEY" > private_key
              chmod 400 private_key
          
              if ! ssh-keygen -y -f private_key &>/dev/null; then
                  echo "The SSH private key provided in PUBLIC_INSTANCE_SSH_KEY is invalid."
                  exit 1
              fi
          else
              echo "The PUBLIC_INSTANCE_SSH_KEY secret content is empty. Please read carefully the submission guidelines."
              exit 1
          fi
          
          echo "PUBLIC_IP=$PUBLIC_IP" >> "$GITHUB_OUTPUT"
          echo "PRIVATE_IP=$PRIVATE_IP" >> "$GITHUB_OUTPUT"

      - name: Test Bastion Connect
        run: |
          export PUBLIC_IP=${{ steps.parse_ip.outputs.PUBLIC_IP }}
          export PRIVATE_IP=${{ steps.parse_ip.outputs.PRIVATE_IP }}
          
          bash test/test_bastion.sh
      - name: SSH Keys Rotation
        run: |
          export PUBLIC_IP=${{ steps.parse_ip.outputs.PUBLIC_IP }}
          export PRIVATE_IP=${{ steps.parse_ip.outputs.PRIVATE_IP }}
          
          bash test/test_rotation.sh

  NetworkingProjectTestTLSHandshake:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: exit-zero-academy/NetworkingProject
          path: NetworkingProjectOriginal
      - name: Copy test files
        run: mv -f NetworkingProjectOriginal/test/* test/
      - uses: actions/setup-python@v1
      - uses: BSFishy/pip-action@v1
        with:
          packages: |
            aiohttp
      - name: TLS Handshake - Getting Eve certificate
        run: |
          bash test/test_tls.sh eve
      - name: TLS Handshake - Bad client test message encryption
        run: |
          bash test/test_tls.sh bad-msg
      - name: TLS Handshake - Full handshake process
        run: |
          bash test/test_tls.sh